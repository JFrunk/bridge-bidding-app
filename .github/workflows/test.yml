name: Tests

on:
  push:
    branches: [ development, main ]
  pull_request:
    branches: [ development, main ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.13]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Run unit tests
      run: |
        cd backend
        pytest tests/unit/ -v

    - name: Run integration tests
      run: |
        cd backend
        pytest tests/integration/ -v

    - name: Run regression tests
      run: |
        cd backend
        pytest tests/regression/ -v

    - name: Run full test suite with coverage
      run: |
        cd backend
        pytest tests/ -v --cov=engine --cov-report=xml --cov-report=term

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage
        fail_ci_if_error: false

  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Run frontend unit tests
      run: |
        cd frontend
        CI=true npm test -- --coverage --watchAll=false

    - name: Upload frontend coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/coverage-final.json
        flags: frontend
        name: frontend-coverage
        fail_ci_if_error: false

  e2e-tests:
    name: E2E Tests (Playwright)
    runs-on: ubuntu-latest
    needs: [backend-tests, frontend-tests]

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install backend dependencies
      run: |
        cd backend
        pip install -r requirements.txt

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Install Playwright browsers
      run: |
        cd frontend
        npx playwright install --with-deps chromium

    - name: Start backend server
      run: |
        cd backend
        python server.py &
        sleep 5
      env:
        FLASK_ENV: test

    - name: Start frontend server
      run: |
        cd frontend
        npm start &
        sleep 15
      env:
        CI: false

    - name: Wait for servers to be ready
      run: |
        timeout 30 bash -c 'until curl -f http://localhost:5001/api/scenarios; do sleep 2; done'
        timeout 30 bash -c 'until curl -f http://localhost:3000; do sleep 2; done'

    - name: Run E2E tests
      run: |
        cd frontend
        npx playwright test

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30

    - name: Upload test screenshots/videos
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: playwright-failures
        path: frontend/test-results/
        retention-days: 7
